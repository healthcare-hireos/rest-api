version: '3.4'
services:
  dev:
    container_name: nestjs_rest_api_dev
    image: nestjs-api-dev:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    command: npm run start:dev
    ports:
      -  ${APP_PORT_LOCAL-APP_PORT}:${APP_PORT}
    networks:
      - app-network
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  prod:
    container_name: nestjs_rest_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      -  ${APP_PORT_LOCAL-APP_PORT}:${APP_PORT}
    networks:
      - app-network
    depends_on:
      - postgres
    volumes:
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    restart: unless-stopped

  postgres:
    image: postgres
    container_name: postgres
    ports:
      - ${DATABASE_PORT_LOCAL-DATABASE_PORT}:${DATABASE_PORT}
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
